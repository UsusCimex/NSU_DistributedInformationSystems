services:
  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  manager:
    build: ./manager
    container_name: manager
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: on-failure

  worker:
    build: ./worker
    container_name: worker
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    # Для масштабирования можно воспользоваться командой:
    # docker-compose up --scale worker=3

volumes:
  mongo_data:
